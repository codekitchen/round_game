syntax = "proto3";
package gameserver;

option go_package = "internal/protocol";

enum Role {
  ROLE_OBSERVER = 0;
  ROLE_PLAYER = 1;
}

message Player {
  string id = 1;
  string name = 2;
}

message GameMessage {
  int32 frame = 1;
  oneof msg {
    // administrative events
    GameInit gameInit = 2;
    PlayerChange playerChange = 3;
    Heartbeat heartbeat = 4;
    PassControl passControl = 5;
    GamePing ping = 6;
    Kicked kicked = 7;

    // game-specific events that the server doesn't parse
    GameEvent gameEvent = 100;
    Replay replay = 101;

    // UI events that don't directly affect the simulation state
    PlayerList playerList = 200;
  }
}

// used to advance the frame count when nothing else has happened for a while
message Heartbeat {
}

message GameInit {
  int32 seed = 1;
  Player yourPlayer = 2;
}

message PlayerChange {
  string player = 1;
}

message GameEvent {
  string type = 1;
}

message Replay {
  repeated GameMessage messages = 1;
}

message PassControl {
}

message PlayerList {
  repeated Player players = 1;
  string currentPlayerID = 2;
}

message GamePing {
}

enum KickReason {
  KICK_REASON_IDLE = 0;
}

message Kicked {
  KickReason reason = 1;
}
